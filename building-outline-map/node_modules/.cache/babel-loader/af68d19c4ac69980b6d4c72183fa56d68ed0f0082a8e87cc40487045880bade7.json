{"ast":null,"code":"var _jsxFileName = \"/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Popup from './components/Popup/Popup';\nimport NaverMap from './components/Map/NaverMap';\nimport WeatherBar from './components/Weather/WeatherBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [showEmoji, setShowEmoji] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const [user, setUser] = useState(null);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n  useEffect(() => {\n    document.body.style.backgroundColor = darkMode ? '#222' : '#fff';\n    document.body.style.color = darkMode ? '#fff' : '#000';\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `App ${darkMode ? 'dark' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(Popup, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-layout\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        showEmoji: showEmoji,\n        setShowEmoji: setShowEmoji,\n        darkMode: darkMode,\n        setDarkMode: setDarkMode,\n        searchQuery: searchQuery,\n        setSearchQuery: setSearchQuery,\n        searchResults: searchResults,\n        setSearchResults: setSearchResults,\n        setSelectedPlace: setSelectedPlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"map-container\",\n        children: [/*#__PURE__*/_jsxDEV(NaverMap, {\n          searchQuery: searchQuery,\n          searchResults: searchResults,\n          selectedPlace: selectedPlace\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherBar, {\n          darkMode: darkMode,\n          searchQuery: searchQuery\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {\n      darkMode: darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"ogJejV94IoeLHFyKx/QuV7f26DY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Sidebar","Navbar","Footer","Popup","NaverMap","WeatherBar","jsxDEV","_jsxDEV","App","_s","showEmoji","setShowEmoji","darkMode","setDarkMode","user","setUser","searchQuery","setSearchQuery","searchResults","setSearchResults","selectedPlace","setSelectedPlace","document","body","style","backgroundColor","color","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/App.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './App.css';\n\nimport Sidebar from './components/Sidebar/Sidebar';\nimport Navbar from './components/Navbar/Navbar';\nimport Footer from './components/Footer/Footer';\nimport Popup from './components/Popup/Popup';\nimport NaverMap from './components/Map/NaverMap';\nimport WeatherBar from './components/Weather/WeatherBar';\n\nfunction App() {\n  const [showEmoji, setShowEmoji] = useState(true);\n  const [darkMode, setDarkMode] = useState(false);\n  const [user, setUser] = useState(null);\n\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n  const [searchResults, setSearchResults] = useState([]);\n  const [selectedPlace, setSelectedPlace] = useState(null);\n\n\n  useEffect(() => {\n    document.body.style.backgroundColor = darkMode ? '#222' : '#fff';\n    document.body.style.color = darkMode ? '#fff' : '#000';\n  }, [darkMode]);\n\n\n  return (\n    <div className={`App ${darkMode ? 'dark' : ''}`}>\n      <Popup />\n      <Navbar darkMode={darkMode} />\n      <div className=\"main-layout\">\n        <Sidebar\n          showEmoji={showEmoji}\n          setShowEmoji={setShowEmoji}\n          darkMode={darkMode}\n          setDarkMode={setDarkMode}\n          searchQuery={searchQuery}\n          setSearchQuery={setSearchQuery}\n          searchResults={searchResults}\n          setSearchResults={setSearchResults}\n          setSelectedPlace={setSelectedPlace}\n        />\n\n        <div className=\"map-container\">\n          <NaverMap \n          searchQuery={searchQuery}\n          searchResults={searchResults} selectedPlace={selectedPlace} />\n          <WeatherBar\n            darkMode={darkMode}\n            searchQuery={searchQuery}\n          />\n        </div>\n      </div>\n      <Footer darkMode={darkMode} />\n    </div>\n\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}