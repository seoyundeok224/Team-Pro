{"ast":null,"code":"var _jsxFileName = \"/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Map/NaverMap.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_ID;\nfunction NaverMap({\n  searchQuery\n}) {\n  _s();\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markerRef = useRef(null);\n  const initMarkerRef = useRef(null);\n  const [isMapReady, setIsMapReady] = useState(false);\n  const [hasSearchedOnce, setHasSearchedOnce] = useState(false); // ✅ 검색 여부 플래그\n\n  const loadNaverScript = () => {\n    return new Promise((resolve, reject) => {\n      if (window.naver && window.naver.maps) {\n        resolve();\n        return;\n      }\n      const script = document.createElement('script');\n      script.src = `https://oapi.map.naver.com/openapi/v3/maps.js?ncpKeyId=${NAVER_CLIENT_ID}&submodules=geocoder`;\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.naver && window.naver.maps) {\n          resolve();\n        } else {\n          reject(new Error('네이버 지도 API 로딩 실패'));\n        }\n      };\n      script.onerror = reject;\n      document.head.appendChild(script);\n    });\n  };\n\n  // 지도 로드 및 초기 마커 표시\n  useEffect(() => {\n    loadNaverScript().then(() => {\n      const mapOptions = {\n        center: new window.naver.maps.LatLng(37.5665, 126.978),\n        zoom: 14,\n        zoomControl: true,\n        mapTypeControl: true,\n        mapTypeId: window.naver.maps.MapTypeId.NORMAL,\n        scaleControl: true,\n        logoControl: true,\n        padding: {\n          top: 10,\n          right: 10,\n          bottom: 10,\n          left: 10\n        },\n        mapDataControl: false,\n        zoomControlOptions: {\n          position: window.naver.maps.Position.BOTTOM_LEFT,\n          style: 2\n        }\n      };\n      if (mapRef.current) {\n        mapInstance.current = new window.naver.maps.Map(mapRef.current, mapOptions);\n\n        // ⛔ 검색된 적이 없을 때만 초기 마커 생성\n        if (navigator.geolocation && !hasSearchedOnce) {\n          navigator.geolocation.getCurrentPosition(pos => {\n            const currPos = new window.naver.maps.LatLng(pos.coords.latitude, pos.coords.longitude);\n            mapInstance.current.setCenter(currPos);\n            mapInstance.current.setZoom(13);\n            initMarkerRef.current = new window.naver.maps.Marker({\n              position: currPos,\n              map: mapInstance.current\n            });\n            console.log('1. 초기 위치 마커 생성');\n          });\n        }\n        setIsMapReady(true);\n      }\n    }).catch(err => {\n      console.error('지도 로드 실패:', err);\n    });\n  }, [hasSearchedOnce]);\n\n  // 주소 검색 시 지도 이동\n  useEffect(() => {\n    var _window$naver, _window$naver$maps;\n    if (!searchQuery || !isMapReady || !((_window$naver = window.naver) !== null && _window$naver !== void 0 && (_window$naver$maps = _window$naver.maps) !== null && _window$naver$maps !== void 0 && _window$naver$maps.Service)) return;\n\n    // 검색 시도 기록\n    setHasSearchedOnce(true);\n    window.naver.maps.Service.geocode({\n      query: searchQuery\n    }, (status, response) => {\n      var _response$v;\n      if (status !== window.naver.maps.Service.Status.OK) {\n        alert('주소 검색 실패');\n        return;\n      }\n\n      // 주소를 반환하여 지도에 표시 할 마커가 있는 경우 alert X.\n      if (!(response !== null && response !== void 0 && (_response$v = response.v2) !== null && _response$v !== void 0 && _response$v.addresses) || response.v2.addresses.length === 0 || !response.v2.addresses[0]) {\n        alert('검색 결과 없음');\n        return;\n      }\n      const result = response.v2.addresses[0];\n\n      // 원본 코드: 검색 결과가 있음에도 alert가 발생\n      // const result = response.v2.addresses[0];\n      // if (!result) {\n      //   alert('검색 결과 없음');\n      //   return;\n      // }\n\n      const lat = parseFloat(result.y);\n      const lng = parseFloat(result.x);\n      const location = new window.naver.maps.LatLng(lat, lng);\n      mapInstance.current.setCenter(location);\n      mapInstance.current.setZoom(14);\n\n      // 초기 마커 제거 (첫 검색 시점)\n      if (initMarkerRef.current) {\n        initMarkerRef.current.setMap(null);\n        initMarkerRef.current = null;\n        console.log('2. 초기 위치 마커 제거');\n      }\n\n      // 기존 검색 마커 제거\n      if (markerRef.current) {\n        markerRef.current.setMap(null);\n      }\n      markerRef.current = new window.naver.maps.Marker({\n        position: location,\n        map: mapInstance.current\n      });\n      console.log('3. 검색 마커 생성:', result.roadAddress || result.jibunAddress);\n    });\n  }, [searchQuery, isMapReady]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"map-container\",\n    ref: mapRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n}\n_s(NaverMap, \"aEi8F3dKSAQsgOn0EuuP6kP4Auw=\");\n_c = NaverMap;\nexport default NaverMap;\nvar _c;\n$RefreshReg$(_c, \"NaverMap\");","map":{"version":3,"names":["React","useEffect","useRef","useState","jsxDEV","_jsxDEV","NAVER_CLIENT_ID","process","env","REACT_APP_NAVER_ID","NaverMap","searchQuery","_s","mapRef","mapInstance","markerRef","initMarkerRef","isMapReady","setIsMapReady","hasSearchedOnce","setHasSearchedOnce","loadNaverScript","Promise","resolve","reject","window","naver","maps","script","document","createElement","src","async","defer","onload","Error","onerror","head","appendChild","then","mapOptions","center","LatLng","zoom","zoomControl","mapTypeControl","mapTypeId","MapTypeId","NORMAL","scaleControl","logoControl","padding","top","right","bottom","left","mapDataControl","zoomControlOptions","position","Position","BOTTOM_LEFT","style","current","Map","navigator","geolocation","getCurrentPosition","pos","currPos","coords","latitude","longitude","setCenter","setZoom","Marker","map","console","log","catch","err","error","_window$naver","_window$naver$maps","Service","geocode","query","status","response","_response$v","Status","OK","alert","v2","addresses","length","result","lat","parseFloat","y","lng","x","location","setMap","roadAddress","jibunAddress","className","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Map/NaverMap.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\n\nconst NAVER_CLIENT_ID = process.env.REACT_APP_NAVER_ID;\n\nfunction NaverMap({ searchQuery }) {\n  const mapRef = useRef(null);\n  const mapInstance = useRef(null);\n  const markerRef = useRef(null);\n  const initMarkerRef = useRef(null);\n  const [isMapReady, setIsMapReady] = useState(false);\n  const [hasSearchedOnce, setHasSearchedOnce] = useState(false); // ✅ 검색 여부 플래그\n\n  const loadNaverScript = () => {\n    return new Promise((resolve, reject) => {\n      if (window.naver && window.naver.maps) {\n        resolve();\n        return;\n      }\n\n      const script = document.createElement('script');\n      script.src = `https://oapi.map.naver.com/openapi/v3/maps.js?ncpKeyId=${NAVER_CLIENT_ID}&submodules=geocoder`;\n      script.async = true;\n      script.defer = true;\n      script.onload = () => {\n        if (window.naver && window.naver.maps) {\n          resolve();\n        } else {\n          reject(new Error('네이버 지도 API 로딩 실패'));\n        }\n      };\n      script.onerror = reject;\n\n      document.head.appendChild(script);\n    });\n  };\n\n  // 지도 로드 및 초기 마커 표시\n  useEffect(() => {\n    loadNaverScript().then(() => {\n      const mapOptions = {\n        center: new window.naver.maps.LatLng(37.5665, 126.978),\n        zoom: 14,\n        zoomControl: true,\n        mapTypeControl: true,\n        mapTypeId: window.naver.maps.MapTypeId.NORMAL,\n        scaleControl: true,\n        logoControl: true,\n        padding: { top: 10, right: 10, bottom: 10, left: 10 },\n        mapDataControl: false,\n        zoomControlOptions: {\n          position: window.naver.maps.Position.BOTTOM_LEFT,\n          style: 2,\n        },\n      };\n\n      if (mapRef.current) {\n        mapInstance.current = new window.naver.maps.Map(mapRef.current, mapOptions);\n\n        // ⛔ 검색된 적이 없을 때만 초기 마커 생성\n        if (navigator.geolocation && !hasSearchedOnce) {\n          navigator.geolocation.getCurrentPosition((pos) => {\n            const currPos = new window.naver.maps.LatLng(\n              pos.coords.latitude,\n              pos.coords.longitude\n            );\n            mapInstance.current.setCenter(currPos);\n            mapInstance.current.setZoom(13);\n            initMarkerRef.current = new window.naver.maps.Marker({\n              position: currPos,\n              map: mapInstance.current,\n            });\n            console.log('1. 초기 위치 마커 생성');\n          });\n        }\n\n        setIsMapReady(true);\n      }\n    }).catch((err) => {\n      console.error('지도 로드 실패:', err);\n    });\n  }, [hasSearchedOnce]);\n\n  // 주소 검색 시 지도 이동\n  useEffect(() => {\n    if (!searchQuery || !isMapReady || !window.naver?.maps?.Service) return;\n\n    // 검색 시도 기록\n    setHasSearchedOnce(true);\n\n    window.naver.maps.Service.geocode(\n      { query: searchQuery },\n      (status, response) => {\n        if (status !== window.naver.maps.Service.Status.OK) {\n          alert('주소 검색 실패');\n          return;\n        }\n\n        // 주소를 반환하여 지도에 표시 할 마커가 있는 경우 alert X.\n        if (!response?.v2?.addresses || \n          response.v2.addresses.length === 0 || \n          !response.v2.addresses[0]) {\n          alert('검색 결과 없음');\n          return;\n        }\n\n        const result = response.v2.addresses[0];\n        \n        // 원본 코드: 검색 결과가 있음에도 alert가 발생\n        // const result = response.v2.addresses[0];\n        // if (!result) {\n        //   alert('검색 결과 없음');\n        //   return;\n        // }\n        \n        const lat = parseFloat(result.y);\n        const lng = parseFloat(result.x);\n        const location = new window.naver.maps.LatLng(lat, lng);\n\n        mapInstance.current.setCenter(location);\n        mapInstance.current.setZoom(14);\n\n        // 초기 마커 제거 (첫 검색 시점)\n        if (initMarkerRef.current) {\n          initMarkerRef.current.setMap(null);\n          initMarkerRef.current = null;\n          console.log('2. 초기 위치 마커 제거');\n        }\n\n        // 기존 검색 마커 제거\n        if (markerRef.current) {\n          markerRef.current.setMap(null);\n        }\n\n        markerRef.current = new window.naver.maps.Marker({\n          position: location,\n          map: mapInstance.current,\n        });\n\n        console.log('3. 검색 마커 생성:', result.roadAddress || result.jibunAddress);\n      }\n    );\n  }, [searchQuery, isMapReady]);\n\n  return <div className=\"map-container\" ref={mapRef} />;\n}\n\nexport default NaverMap;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}