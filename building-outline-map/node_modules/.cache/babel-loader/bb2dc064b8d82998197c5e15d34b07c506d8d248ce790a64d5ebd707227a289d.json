{"ast":null,"code":"var _jsxFileName = \"/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Weather/WeatherBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './WeatherBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY_1 = '84a4cfe7ca79fc9b0120217a7d5a2028'; // OpenWeatherMap API\n\nfunction WeatherBar({\n  darkMode,\n  searchQuery\n}) {\n  _s();\n  const [today, setToday] = useState(null);\n  const [hourly, setHourly] = useState([]);\n  const [locationName, setLocationName] = useState('지역 날씨 정보');\n\n  // ✅ Kakao 주소 → 좌표 변환 (프록시 사용)\n  const getCoordinates = async query => {\n    if (!query) return null;\n    const refinedQuery = query.trim().replace(\"서울시\", \"서울\").replace(\"경기도\", \"경기\").replace(\"부산시\", \"부산\").replace(/\\s+/g, \" \");\n    try {\n      const res = await fetch(`http://localhost:4000/kakao/address?query=${encodeURIComponent(refinedQuery)}`);\n      const data = await res.json();\n      if (!data.documents || data.documents.length === 0) return null;\n      const {\n        x,\n        y,\n        address_name\n      } = data.documents[0];\n      return {\n        lat: y,\n        lon: x,\n        name: address_name\n      };\n    } catch (err) {\n      console.error('주소 → 좌표 변환 실패:', err);\n      return null;\n    }\n  };\n\n  // 날씨 정보 요청\n  const fetchWeather = async ({\n    lat,\n    lon\n  }) => {\n    const todayRes = await fetch(`https://api.openweathermap.org/data/2.5/weather` + `?lat=${lat}&lon=${lon}` + `&appid=${API_KEY_1}&units=metric&lang=kr`);\n    const todayData = await todayRes.json();\n    setToday(todayData);\n    const hourlyRes = await fetch(`https://api.openweathermap.org/data/2.5/forecast` + `?lat=${lat}&lon=${lon}` + `&appid=${API_KEY_1}&units=metric&lang=kr`);\n    const hourlyData = await hourlyRes.json();\n    setHourly(hourlyData.list.slice(0, 6));\n  };\n\n  // 검색어 변경 시 실행\n  useEffect(() => {\n    (async () => {\n      if (!searchQuery) return;\n      const coords = await getCoordinates(searchQuery);\n      if (coords) {\n        setLocationName(coords.name);\n        fetchWeather(coords);\n      }\n    })();\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `weather-placeBar ${darkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDF24 \", locationName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uB0A0\\uC528\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), today ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${today.weather[0].icon}@2x.png`,\n            alt: \"weather-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp\",\n              children: [today.main.temp.toFixed(1), \"\\u2103\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: today.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uB529 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC2DC\\uAC04\\uB300\\uBCC4 \\uB0A0\\uC528\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hourly-scroll\",\n          children: hourly.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hourly-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.dt_txt.split(' ')[1].slice(0, 5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n              alt: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.main.temp.toFixed(1), \"\\u2103\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this)]\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherBar, \"njqP/a7SGxaqulARC/CDhobbvqU=\");\n_c = WeatherBar;\nexport default WeatherBar;\nvar _c;\n$RefreshReg$(_c, \"WeatherBar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_KEY_1","WeatherBar","darkMode","searchQuery","_s","today","setToday","hourly","setHourly","locationName","setLocationName","getCoordinates","query","refinedQuery","trim","replace","res","fetch","encodeURIComponent","data","json","documents","length","x","y","address_name","lat","lon","name","err","console","error","fetchWeather","todayRes","todayData","hourlyRes","hourlyData","list","slice","coords","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","weather","icon","alt","main","temp","toFixed","description","map","item","idx","dt_txt","split","_c","$RefreshReg$"],"sources":["/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Weather/WeatherBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './WeatherBar.css';\n\nconst API_KEY_1 = '84a4cfe7ca79fc9b0120217a7d5a2028'; // OpenWeatherMap API\n\nfunction WeatherBar({ darkMode, searchQuery }) {\n  const [today, setToday] = useState(null);\n  const [hourly, setHourly] = useState([]);\n  const [locationName, setLocationName] = useState('지역 날씨 정보');\n\n  // ✅ Kakao 주소 → 좌표 변환 (프록시 사용)\n  const getCoordinates = async (query) => {\n    if (!query) return null;\n\n    const refinedQuery = query\n      .trim()\n      .replace(\"서울시\", \"서울\")\n      .replace(\"경기도\", \"경기\")\n      .replace(\"부산시\", \"부산\")\n      .replace(/\\s+/g, \" \");\n\n    try {\n      const res = await fetch(`http://localhost:4000/kakao/address?query=${encodeURIComponent(refinedQuery)}`);\n      const data = await res.json();\n\n      if (!data.documents || data.documents.length === 0) return null;\n\n      const { x, y, address_name } = data.documents[0];\n\n      return {\n        lat: y,\n        lon: x,\n        name: address_name,\n      };\n    } catch (err) {\n      console.error('주소 → 좌표 변환 실패:', err);\n      return null;\n    }\n  };\n\n  // 날씨 정보 요청\n  const fetchWeather = async ({ lat, lon }) => {\n    const todayRes = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather` +\n        `?lat=${lat}&lon=${lon}` +\n        `&appid=${API_KEY_1}&units=metric&lang=kr`\n    );\n    const todayData = await todayRes.json();\n    setToday(todayData);\n\n    const hourlyRes = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast` +\n        `?lat=${lat}&lon=${lon}` +\n        `&appid=${API_KEY_1}&units=metric&lang=kr`\n    );\n    const hourlyData = await hourlyRes.json();\n    setHourly(hourlyData.list.slice(0, 6));\n  };\n\n  // 검색어 변경 시 실행\n  useEffect(() => {\n    (async () => {\n      if (!searchQuery) return;\n      const coords = await getCoordinates(searchQuery);\n      if (coords) {\n        setLocationName(coords.name);\n        fetchWeather(coords);\n      }\n    })();\n  }, [searchQuery]);\n\n  return (\n    <div className={`weather-placeBar ${darkMode ? 'dark' : 'light'}`}>\n      <div className=\"weather-card\">\n        <h3>🌤 {locationName}</h3>\n\n        <div className=\"today-section\">\n          <h4>오늘의 날씨</h4>\n          {today ? (\n            <div className=\"today-content\">\n              <img\n                src={`https://openweathermap.org/img/wn/${today.weather[0].icon}@2x.png`}\n                alt=\"weather-icon\"\n              />\n              <div>\n                <p className=\"temp\">{today.main.temp.toFixed(1)}℃</p>\n                <p>{today.weather[0].description}</p>\n              </div>\n            </div>\n          ) : (\n            <p>로딩 중...</p>\n          )}\n        </div>\n\n        <div className=\"hourly-section\">\n          <h4>시간대별 날씨</h4>\n          <div className=\"hourly-scroll\">\n            {hourly.map((item, idx) => (\n              <div className=\"hourly-card\" key={idx}>\n                <p>{item.dt_txt.split(' ')[1].slice(0, 5)}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${item.weather[0].icon}.png`}\n                  alt=\"icon\"\n                />\n                <p>{item.main.temp.toFixed(1)}℃</p>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default WeatherBar;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}