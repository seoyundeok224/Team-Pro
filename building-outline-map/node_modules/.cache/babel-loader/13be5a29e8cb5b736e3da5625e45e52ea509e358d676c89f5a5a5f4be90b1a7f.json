{"ast":null,"code":"var _jsxFileName = \"/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Sidebar/Sidebar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Sidebar.css';\nimport { naverLocalSearch, naverGeocode } from '../utils/naverApi';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Sidebar = ({\n  searchResults,\n  setSearchResults,\n  selectedPlace,\n  setSelectedPlace,\n  onSearch,\n  showEmoji,\n  setShowEmoji,\n  darkMode,\n  setDarkMode,\n  searchQuery,\n  setSearchQuery\n}) => {\n  _s();\n  // 입력값 상태\n  const [inputValue, setInputValue] = useState('');\n\n  // 최근 검색어 리스트 상태 (localStorage 초기화)\n  const [searchHistory, setSearchHistory] = useState(() => {\n    const saved = localStorage.getItem('searchHistory');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // 즐겨찾기 리스트 상태\n  const [favorites, setFavorites] = useState(() => {\n    const saved = localStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // 최근 검색어 토글 상태\n  const [showHistory, setShowHistory] = useState(true);\n\n  // 오류 메시지 상태\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // 사이드바 접힘 상태\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  // 자동완성 리스트 상태\n  const [autocompleteList, setAutocompleteList] = useState([]);\n\n  // 자동완성 영역 외부 클릭 감지를 위한 ref\n  const autocompleteRef = useRef(null);\n\n  // * 신규) 맵 검색 로딩상태 - 네이버 검색 API가 추가됐습니다.\n  const [loading, setLoading] = useState(false);\n\n  // 입력값 변경 시 자동완성 업데이트\n  const handleInputChange = e => {\n    const val = e.target.value;\n    setInputValue(val);\n    if (val.length === 0) {\n      setAutocompleteList([]);\n      setErrorMessage('');\n      return;\n    }\n    const filtered = searchHistory.filter(item => item.toLowerCase().includes(val.toLowerCase()));\n    setAutocompleteList(filtered.slice(0, 5));\n    setErrorMessage('');\n  };\n\n  // 검색 실행 함수: 히스토리, 에러관리, 쿼리(검색)관리\n  // * 신규)  const handleSearch = () => { 에서  const handleSearch = async () => { 로 async 추가(await 사용을 위해)\n  const handleSearch = async () => {\n    const trimmedInput = inputValue.trim();\n    if (trimmedInput === '') {\n      setErrorMessage('검색어를 입력하세요');\n      return;\n    }\n    setErrorMessage('');\n    setSearchQuery(trimmedInput);\n    // 검색한 item sidebar로 가져옴\n    setLoading(true);\n\n    // 중복 제거 + 최대 5개 저장\n    setSearchHistory(prevHistory => {\n      const updated = [trimmedInput, ...prevHistory.filter(item => item !== trimmedInput)];\n      localStorage.setItem('searchHistory', JSON.stringify(updated.slice(0, 5)));\n      return updated.slice(0, 5);\n    });\n\n    // * 신규)지도검색 관련, 지도검색을 이용해서 쿼리가 들어오면\n    setLoading(true);\n\n    // * 신규) 네이버 검색 API로 검색결과 받아오기\n    try {\n      const localResults = await naverLocalSearch(trimmedInput);\n\n      // 오류 확인용 콘솔\n      console.log('[naverLocalSearch] 최종 URL:', url);\n      console.log('[naverLocalSearch] 전달되는 query:', query);\n      if (!localResults) {\n        alert('검색 결과를 불러올 수 없습니다.');\n        setSearchResults([]);\n        setLoading(false);\n        return;\n      }\n\n      // 검색결과를 지오코딩해서 위/경도 좌표 추출\n      const placesWithCoords = await Promise.all(localResults.map(async item => {\n        const coords = await naverGeocode(item.roadAddress || item.address);\n        return {\n          ...item,\n          ...coords\n        };\n      }));\n\n      // 최대 5개의 검색결과 출력 (지오코딩으로 좌표변환 실패한 데이터는 제외 = 오류제외)\n      setSearchResults(placesWithCoords.filter(item => item.lat && item.lng).slice(0, 5));\n      setSelectedPlace(null);\n    } catch (err) {\n      setErrorMessage(`검색 된 장소가 없습니다.`);\n      setSearchResults([]);\n    }\n    setLoading(false);\n    setInputValue('');\n    setAutocompleteList([]);\n  };\n\n  // * 신규) 새 객체설정: 검색어, 검색결과, 검색결과 리스트, 좌표값, 에러메세지\n  const handleClear = () => {\n    setInputValue('');\n    setSearchQuery('');\n    setSearchResults([]);\n    setSelectedPlace(null);\n    setAutocompleteList([]);\n    setErrorMessage('');\n  };\n\n  // 즐겨찾기 추가/삭제\n  const toggleFavorite = keyword => {\n    const updated = favorites.includes(keyword) ? favorites.filter(item => item !== keyword) : [...favorites, keyword];\n    setFavorites(updated);\n    localStorage.setItem('favorites', JSON.stringify(updated));\n  };\n\n  // 특정 검색어 삭제\n  const handleDeleteKeyword = keyword => {\n    const updated = searchHistory.filter(item => item !== keyword);\n    setSearchHistory(updated);\n    localStorage.setItem('searchHistory', JSON.stringify(updated));\n  };\n\n  // 전체 검색 기록 삭제\n  const clearAllHistory = () => {\n    setSearchHistory([]);\n    localStorage.removeItem('searchHistory');\n  };\n\n  // 사이드바 접기/펼치기 토글\n  const toggleSidebar = () => {\n    setSidebarCollapsed(prev => !prev);\n  };\n\n  // 자동완성 클릭 시 검색 실행\n  const handleAutocompleteClick = keyword => {\n    setInputValue(keyword);\n    setSearchQuery(keyword);\n    setAutocompleteList([]);\n  };\n\n  // 외부 클릭 시 자동완성 닫기\n  useEffect(() => {\n    const handleClickOutside = event => {\n      if (autocompleteRef.current && !autocompleteRef.current.contains(event.target)) {\n        setAutocompleteList([]);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // * 신규) 검색 된 장소에서 읍면동 추출\n  function extractRegion(addr) {\n    if (!addr) return '';\n    const parts = addr.split(' ');\n    return parts.slice(0, 3).join(' ');\n  }\n\n  // 기존에 있던 sidebar 기능\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${darkMode ? 'dark' : ''} ${sidebarCollapsed ? 'collapsed' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"collapse-button\",\n      onClick: toggleSidebar,\n      \"aria-label\": sidebarCollapsed ? '사이드바 펼치기' : '사이드바 접기',\n      children: sidebarCollapsed ? '▶' : '◀'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), !sidebarCollapsed && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uD83D\\uDEE0\\uFE0F \\uAE30\\uB2A5 \\uBA54\\uB274\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC704\\uCE58 \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-wrapper\",\n        ref: autocompleteRef,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"search-input\",\n          placeholder: \"\\uB3C4\\uC2DC\\uB098 \\uC9C0\\uC5ED \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n          value: inputValue,\n          onChange: handleInputChange,\n          onKeyDown: e => e.key === 'Enter' && handleSearch(),\n          autoComplete: \"off\",\n          \"aria-label\": \"\\uC704\\uCE58 \\uAC80\\uC0C9 \\uC785\\uB825\\uCC3D\"\n          // * 신규) 검색결과 로딩\n          ,\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), inputValue && /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-input-btn\"\n          // const handleClear 안에 기존에 있던 아래 기능 모두 포함으로 onClick={() => handleClear()} 한 줄로 수정\n          // setInputValue('');, setErrorMessage('');, setAutocompleteList([]);\n          ,\n          onClick: () => handleClear(),\n          \"aria-label\": \"\\uAC80\\uC0C9\\uC5B4 \\uC9C0\\uC6B0\\uAE30\",\n          children: \"\\u2715\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), autocompleteList.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"autocomplete-list\",\n          role: \"listbox\",\n          children: autocompleteList.map((item, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n            role: \"option\",\n            tabIndex: 0,\n            className: \"autocomplete-item\",\n            onClick: () => handleAutocompleteClick(item),\n            onKeyDown: e => e.key === 'Enter' && handleAutocompleteClick(item),\n            children: [item, favorites.includes(item) ? ' ⭐' : '']\n          }, idx, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"search-button\",\n        onClick: handleSearch,\n        disabled: loading,\n        children: loading ? '검색 중...' : '🔍 검색'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 28\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"toggle-history-btn\",\n        onClick: () => setShowHistory(!showHistory),\n        children: showHistory ? '최근 검색어 숨기기 ▲' : '최근 검색어 보기 ▼'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 11\n      }, this), showHistory && searchHistory.length > 0 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uCD5C\\uADFC \\uAC80\\uC0C9\\uC5B4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 281,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"search-history\",\n          children: searchHistory.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"search-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"search-keyword\",\n              onClick: () => {\n                setInputValue(item);\n                setSearchQuery(item);\n              },\n              children: [\"\\uD83D\\uDD01 \", item]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"fav-btn\",\n              onClick: () => toggleFavorite(item),\n              \"aria-label\": favorites.includes(item) ? '즐겨찾기 해제' : '즐겨찾기 추가',\n              children: favorites.includes(item) ? '★' : '☆'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete-btn\",\n              onClick: () => handleDeleteKeyword(item),\n              \"aria-label\": \"\\uAC80\\uC0C9\\uC5B4 \\uC0AD\\uC81C\",\n              children: \"\\u274C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 21\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 282,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"clear-history-btn\",\n          onClick: clearAllHistory,\n          children: \"\\uD83E\\uDDF9 \\uC804\\uCCB4 \\uAE30\\uB85D \\uC0AD\\uC81C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC124\\uC815\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"top-controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"toggle-darkmode-btn\",\n          onClick: () => setDarkMode(!darkMode),\n          children: darkMode ? '💡 라이트 모드' : '🌙 다크 모드'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 327,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"reset-page-btn\",\n          onClick: () => window.location.reload(),\n          children: \"\\uD83D\\uDD04 \\uCD08\\uAE30\\uD654\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 326,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"search-results\",\n        children: searchResults && searchResults.length > 0 && searchResults.map((place, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"search-result-item\",\n          onClick: () => setSelectedPlace(place),\n          style: {\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: place.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 350,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"region\",\n            children: extractRegion(place.roadAddress || place.address)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: e => {\n              e.stopPropagation();\n              navigator.clipboard.writeText(place.roadAddress || place.address);\n            },\n            className: \"copy-btn\",\n            children: \"\\uBCF5\\uC0AC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 352,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"detail-addr\",\n            children: place.roadAddress || place.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 359,\n            columnNumber: 17\n          }, this)]\n        }, idx, true, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 197,\n    columnNumber: 5\n  }, this);\n};\n_s(Sidebar, \"CHwi6Kz8Bn3tMSeML9qcknpKLiE=\");\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","useState","useRef","useEffect","naverLocalSearch","naverGeocode","jsxDEV","_jsxDEV","Fragment","_Fragment","Sidebar","searchResults","setSearchResults","selectedPlace","setSelectedPlace","onSearch","showEmoji","setShowEmoji","darkMode","setDarkMode","searchQuery","setSearchQuery","_s","inputValue","setInputValue","searchHistory","setSearchHistory","saved","localStorage","getItem","JSON","parse","favorites","setFavorites","showHistory","setShowHistory","errorMessage","setErrorMessage","sidebarCollapsed","setSidebarCollapsed","autocompleteList","setAutocompleteList","autocompleteRef","loading","setLoading","handleInputChange","e","val","target","value","length","filtered","filter","item","toLowerCase","includes","slice","handleSearch","trimmedInput","trim","prevHistory","updated","setItem","stringify","localResults","console","log","url","query","alert","placesWithCoords","Promise","all","map","coords","roadAddress","address","lat","lng","err","handleClear","toggleFavorite","keyword","handleDeleteKeyword","clearAllHistory","removeItem","toggleSidebar","prev","handleAutocompleteClick","handleClickOutside","event","current","contains","document","addEventListener","removeEventListener","extractRegion","addr","parts","split","join","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","type","placeholder","onChange","onKeyDown","key","autoComplete","disabled","role","idx","tabIndex","index","window","location","reload","place","style","cursor","title","stopPropagation","navigator","clipboard","writeText","_c","$RefreshReg$"],"sources":["/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Sidebar/Sidebar.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Sidebar.css';\nimport { naverLocalSearch, naverGeocode } from '../utils/naverApi';\n\nconst Sidebar = ({\n  searchResults, setSearchResults,\n  selectedPlace, setSelectedPlace,\n  onSearch,\n  showEmoji, setShowEmoji,\n  darkMode, setDarkMode,\n  searchQuery, setSearchQuery\n}) => {\n\n  // 입력값 상태\n  const [inputValue, setInputValue] = useState('');\n\n  // 최근 검색어 리스트 상태 (localStorage 초기화)\n  const [searchHistory, setSearchHistory] = useState(() => {\n    const saved = localStorage.getItem('searchHistory');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // 즐겨찾기 리스트 상태\n  const [favorites, setFavorites] = useState(() => {\n    const saved = localStorage.getItem('favorites');\n    return saved ? JSON.parse(saved) : [];\n  });\n\n  // 최근 검색어 토글 상태\n  const [showHistory, setShowHistory] = useState(true);\n\n  // 오류 메시지 상태\n  const [errorMessage, setErrorMessage] = useState('');\n\n  // 사이드바 접힘 상태\n  const [sidebarCollapsed, setSidebarCollapsed] = useState(false);\n\n  // 자동완성 리스트 상태\n  const [autocompleteList, setAutocompleteList] = useState([]);\n\n  // 자동완성 영역 외부 클릭 감지를 위한 ref\n  const autocompleteRef = useRef(null);\n\n  // * 신규) 맵 검색 로딩상태 - 네이버 검색 API가 추가됐습니다.\n  const [loading, setLoading] = useState(false);\n\n  // 입력값 변경 시 자동완성 업데이트\n  const handleInputChange = (e) => {\n    const val = e.target.value;\n    setInputValue(val);\n\n    if (val.length === 0) {\n      setAutocompleteList([]);\n      setErrorMessage('');\n      return;\n    }\n\n    const filtered = searchHistory.filter(item =>\n      item.toLowerCase().includes(val.toLowerCase())\n    );\n    setAutocompleteList(filtered.slice(0, 5));\n    setErrorMessage('');\n  };\n\n  // 검색 실행 함수: 히스토리, 에러관리, 쿼리(검색)관리\n  // * 신규)  const handleSearch = () => { 에서  const handleSearch = async () => { 로 async 추가(await 사용을 위해)\n  const handleSearch = async () => {\n    const trimmedInput = inputValue.trim();\n    if (trimmedInput === '') {\n      setErrorMessage('검색어를 입력하세요');\n      return;\n    }\n\n    setErrorMessage('');\n    setSearchQuery(trimmedInput);\n    // 검색한 item sidebar로 가져옴\n    setLoading(true);\n\n    // 중복 제거 + 최대 5개 저장\n    setSearchHistory((prevHistory) => {\n      const updated = [trimmedInput, ...prevHistory.filter(item => item !== trimmedInput)];\n      localStorage.setItem('searchHistory', JSON.stringify(updated.slice(0, 5)));\n      return updated.slice(0, 5);\n    });\n\n    // * 신규)지도검색 관련, 지도검색을 이용해서 쿼리가 들어오면\n    setLoading(true);\n\n    // * 신규) 네이버 검색 API로 검색결과 받아오기\n    try {\n      const localResults = await naverLocalSearch(trimmedInput);\n\n      // 오류 확인용 콘솔\n      console.log('[naverLocalSearch] 최종 URL:', url);\n      console.log('[naverLocalSearch] 전달되는 query:', query);\n      if (!localResults) {\n        alert('검색 결과를 불러올 수 없습니다.');\n        setSearchResults([]);\n        setLoading(false);\n        return;\n      }\n\n      // 검색결과를 지오코딩해서 위/경도 좌표 추출\n      const placesWithCoords = await Promise.all(\n        localResults.map(async item => {\n          const coords = await naverGeocode(item.roadAddress || item.address);\n          return { ...item, ...coords };\n        })\n      );\n\n      // 최대 5개의 검색결과 출력 (지오코딩으로 좌표변환 실패한 데이터는 제외 = 오류제외)\n      setSearchResults(\n        placesWithCoords\n          .filter(item => item.lat && item.lng)\n          .slice(0, 5)\n      );\n      setSelectedPlace(null);\n\n    } catch (err) {\n      setErrorMessage(`검색 된 장소가 없습니다.`);\n      setSearchResults([]);\n    }\n    setLoading(false);\n\n    setInputValue('');\n    setAutocompleteList([]);\n  };\n\n  // * 신규) 새 객체설정: 검색어, 검색결과, 검색결과 리스트, 좌표값, 에러메세지\n  const handleClear = () => {\n    setInputValue('');\n    setSearchQuery('');\n    setSearchResults([]);\n    setSelectedPlace(null);\n    setAutocompleteList([]);\n    setErrorMessage('');\n  };\n\n  // 즐겨찾기 추가/삭제\n  const toggleFavorite = (keyword) => {\n    const updated = favorites.includes(keyword)\n      ? favorites.filter(item => item !== keyword)\n      : [...favorites, keyword];\n\n    setFavorites(updated);\n    localStorage.setItem('favorites', JSON.stringify(updated));\n  };\n\n  // 특정 검색어 삭제\n  const handleDeleteKeyword = (keyword) => {\n    const updated = searchHistory.filter((item) => item !== keyword);\n    setSearchHistory(updated);\n    localStorage.setItem('searchHistory', JSON.stringify(updated));\n  };\n\n  // 전체 검색 기록 삭제\n  const clearAllHistory = () => {\n    setSearchHistory([]);\n    localStorage.removeItem('searchHistory');\n  };\n\n  // 사이드바 접기/펼치기 토글\n  const toggleSidebar = () => {\n    setSidebarCollapsed(prev => !prev);\n  };\n\n  // 자동완성 클릭 시 검색 실행\n  const handleAutocompleteClick = (keyword) => {\n    setInputValue(keyword);\n    setSearchQuery(keyword);\n    setAutocompleteList([]);\n  };\n\n  // 외부 클릭 시 자동완성 닫기\n  useEffect(() => {\n    const handleClickOutside = (event) => {\n      if (\n        autocompleteRef.current &&\n        !autocompleteRef.current.contains(event.target)\n      ) {\n        setAutocompleteList([]);\n      }\n    };\n    document.addEventListener('mousedown', handleClickOutside);\n    return () => document.removeEventListener('mousedown', handleClickOutside);\n  }, []);\n\n  // * 신규) 검색 된 장소에서 읍면동 추출\n  function extractRegion(addr) {\n    if (!addr) return '';\n    const parts = addr.split(' ');\n    return parts.slice(0, 3).join(' ');\n  }\n\n  // 기존에 있던 sidebar 기능\n  return (\n    <div className={`sidebar ${darkMode ? 'dark' : ''} ${sidebarCollapsed ? 'collapsed' : ''}`}>\n\n      {/* 사이드바 접기 버튼 */}\n      <button\n        className=\"collapse-button\"\n        onClick={toggleSidebar}\n        aria-label={sidebarCollapsed ? '사이드바 펼치기' : '사이드바 접기'}\n      >\n        {sidebarCollapsed ? '▶' : '◀'}\n      </button>\n\n      {/* 접혀있지 않을 때만 내용 표시 */}\n      {!sidebarCollapsed && (\n        <>\n          <h2>🛠️ 기능 메뉴</h2>\n\n          {/* 위치 검색 */}\n          <h3>위치 검색</h3>\n          <div className=\"input-wrapper\" ref={autocompleteRef}>\n            <input\n              type=\"text\"\n              className=\"search-input\"\n              placeholder=\"도시나 지역 이름을 입력하세요\"\n              value={inputValue}\n              onChange={handleInputChange}\n              onKeyDown={(e) => e.key === 'Enter' && handleSearch()}\n              autoComplete=\"off\"\n              aria-label=\"위치 검색 입력창\"\n              // * 신규) 검색결과 로딩\n              disabled={loading}\n            />\n\n            {/* 입력 클리어 버튼 */}\n            {inputValue && (\n              <button\n                className=\"clear-input-btn\"\n                // const handleClear 안에 기존에 있던 아래 기능 모두 포함으로 onClick={() => handleClear()} 한 줄로 수정\n                // setInputValue('');, setErrorMessage('');, setAutocompleteList([]);\n                onClick={() => handleClear()}\n                aria-label=\"검색어 지우기\"\n              >\n                ✕\n              </button>\n            )}\n\n            {/* 자동완성 리스트 */}\n            {autocompleteList.length > 0 && (\n              <ul className=\"autocomplete-list\" role=\"listbox\">\n                {autocompleteList.map((item, idx) => (\n                  <li\n                    key={idx}\n                    role=\"option\"\n                    tabIndex={0}\n                    className=\"autocomplete-item\"\n                    onClick={() => handleAutocompleteClick(item)}\n                    onKeyDown={(e) => e.key === 'Enter' && handleAutocompleteClick(item)}\n                  >\n                    {item}{favorites.includes(item) ? ' ⭐' : ''}\n                  </li>\n                ))}\n              </ul>\n            )}\n          </div>\n\n          {/* 검색 실행 버튼 */}\n          {/* 신규) 추가 disabled={loading}, {loading ? '검색 중...' : '🔍 검색'} */}\n          <button className=\"search-button\" onClick={handleSearch} disabled={loading}>\n            {loading ? '검색 중...' : '🔍 검색'}\n          </button>\n\n          {/* 오류 메시지 */}\n          {errorMessage && <div className=\"error-message\">{errorMessage}</div>}\n\n          {/* 최근 검색어 토글 */}\n          <button\n            className=\"toggle-history-btn\"\n            onClick={() => setShowHistory(!showHistory)}\n          >\n            {showHistory ? '최근 검색어 숨기기 ▲' : '최근 검색어 보기 ▼'}\n          </button>\n\n          {/* 최근 검색어 목록 */}\n          {showHistory && searchHistory.length > 0 && (\n            <>\n              <h4>최근 검색어</h4>\n              <ul className=\"search-history\">\n                {searchHistory.map((item, index) => (\n                  <li key={index} className=\"search-item\">\n                    <span\n                      className=\"search-keyword\"\n                      onClick={() => {\n                        setInputValue(item);\n                        setSearchQuery(item);\n                      }}\n                    >\n                      🔁 {item}\n                    </span>\n                    <button\n                      className=\"fav-btn\"\n                      onClick={() => toggleFavorite(item)}\n                      aria-label={favorites.includes(item) ? '즐겨찾기 해제' : '즐겨찾기 추가'}\n                    >\n                      {favorites.includes(item) ? '★' : '☆'}\n                    </button>\n                    <button\n                      className=\"delete-btn\"\n                      onClick={() => handleDeleteKeyword(item)}\n                      aria-label=\"검색어 삭제\"\n                    >\n                      ❌\n                    </button>\n                  </li>\n                ))}\n              </ul>\n\n              {/* 전체 검색 기록 삭제 버튼 */}\n              <button\n                className=\"clear-history-btn\"\n                onClick={clearAllHistory}\n              >\n                🧹 전체 기록 삭제\n              </button>\n            </>\n          )}\n\n          <hr />\n\n          {/* 다크모드 & 초기화 버튼 (가로 배치) */}\n          <h3>설정</h3>\n          <div className=\"top-controls\">\n            <button\n              className=\"toggle-darkmode-btn\"\n              onClick={() => setDarkMode(!darkMode)}\n            >\n              {darkMode ? '💡 라이트 모드' : '🌙 다크 모드'}\n            </button>\n            <button\n              className=\"reset-page-btn\"\n              onClick={() => window.location.reload()}\n            >\n              🔄 초기화\n            </button>\n          </div>\n\n          {/* 신규) 검색결과 5개 맵에 마커표시 */}\n          <div className=\"search-results\">\n            {searchResults && searchResults.length > 0 && searchResults.map((place, idx) => (\n              <div\n                key={idx}\n                className=\"search-result-item\"\n                onClick={() => setSelectedPlace(place)}\n                style={{ cursor: 'pointer' }}\n              >\n                <strong>{place.title}</strong>\n                <span className=\"region\">{extractRegion(place.roadAddress || place.address)}</span>\n                <button\n                  onClick={e => {\n                    e.stopPropagation();\n                    navigator.clipboard.writeText(place.roadAddress || place.address);\n                  }}\n                  className=\"copy-btn\"\n                >복사</button>\n                <div className=\"detail-addr\">{place.roadAddress || place.address}</div>\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport default Sidebar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}