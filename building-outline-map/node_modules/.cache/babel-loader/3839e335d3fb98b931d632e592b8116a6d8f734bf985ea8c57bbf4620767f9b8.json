{"ast":null,"code":"var _jsxFileName = \"/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Weather/WeatherBar.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './WeatherBar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY_1 = '84a4cfe7ca79fc9b0120217a7d5a2028'; // openweathermap API\n\nfunction WeatherBar({\n  darkMode,\n  searchQuery\n}) {\n  _s();\n  const [today, setToday] = useState(null);\n  const [hourly, setHourly] = useState([]);\n  const [locationName, setLocationName] = useState('지역 날씨 정보');\n\n  // 주소 -> 좌표 변환\n  const getCoordinates = async query => {\n    const res = await fetch(`https://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=1&appid=${API_KEY_1}`);\n    const data = await res.json();\n    if (data.length === 0) {\n      alert(\"해당 지역을 찾을 수 없습니다.\");\n      return null;\n    }\n    return {\n      lat: data[0].lat,\n      lon: data[0].lon,\n      name: `${data[0].name}${data[0].state ? ', ' + data[0].state : ''}`\n    };\n  };\n\n  // 날씨 정보 요청\n  const fetchWeather = async coords => {\n    const resToday = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${coords.lat}&lon=${coords.lon}&appid=${API_KEY_1}&units=metric&lang=kr`);\n    const dataToday = await resToday.json();\n    setToday(dataToday);\n    const resHourly = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${coords.lat}&lon=${coords.lon}&appid=${API_KEY_1}&units=metric&lang=kr`);\n    const dataHourly = await resHourly.json();\n    setHourly(dataHourly.list.slice(0, 6));\n  };\n\n  // 검색어가 변경될 때마다 날씨 갱신\n  useEffect(() => {\n    const loadWeather = async () => {\n      if (!searchQuery) return;\n      const coords = await getCoordinates(searchQuery);\n      if (coords) {\n        setLocationName(searchQuery);\n        fetchWeather(coords);\n      }\n    };\n    loadWeather();\n  }, [searchQuery]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `weather-placeBar ${darkMode ? 'dark' : 'light'}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"weather-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\uD83C\\uDF24 \", locationName]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"today-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC624\\uB298\\uC758 \\uB0A0\\uC528\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 9\n        }, this), today ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"today-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: `https://openweathermap.org/img/wn/${today.weather[0].icon}@2x.png`,\n            alt: \"weather-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"temp\",\n              children: [today.main.temp.toFixed(1), \"\\u2103\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: today.weather[0].description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\uB85C\\uB529 \\uC911...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hourly-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"\\uC2DC\\uAC04\\uB300\\uBCC4 \\uB0A0\\uC528\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"hourly-scroll\",\n          children: hourly.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"hourly-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.dt_txt.split(' ')[1].slice(0, 5)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n              src: `https://openweathermap.org/img/wn/${item.weather[0].icon}.png`,\n              alt: \"icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.main.temp.toFixed(1), \"\\u2103\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_s(WeatherBar, \"njqP/a7SGxaqulARC/CDhobbvqU=\");\n_c = WeatherBar;\nexport default WeatherBar;\nvar _c;\n$RefreshReg$(_c, \"WeatherBar\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_KEY_1","WeatherBar","darkMode","searchQuery","_s","today","setToday","hourly","setHourly","locationName","setLocationName","getCoordinates","query","res","fetch","data","json","length","alert","lat","lon","name","state","fetchWeather","coords","resToday","dataToday","resHourly","dataHourly","list","slice","loadWeather","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","weather","icon","alt","main","temp","toFixed","description","map","item","index","dt_txt","split","_c","$RefreshReg$"],"sources":["/Users/thesueji/Desktop/team2/Team-Pro/building-outline-map/src/components/Weather/WeatherBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './WeatherBar.css';\n\nconst API_KEY_1 = '84a4cfe7ca79fc9b0120217a7d5a2028'; // openweathermap API\n\nfunction WeatherBar({darkMode, searchQuery}) {\n\n  const [today, setToday] = useState(null);\n  const [hourly, setHourly] = useState([]);\n  const [locationName, setLocationName] = useState('지역 날씨 정보');\n\n  \n  // 주소 -> 좌표 변환\n  const getCoordinates = async (query) => {\n    const res = await fetch(\n      `https://api.openweathermap.org/geo/1.0/direct?q=${query}&limit=1&appid=${API_KEY_1}`\n    );\n    const data = await res.json();\n    if (data.length === 0) {\n      alert(\"해당 지역을 찾을 수 없습니다.\");\n      return null;\n    }\n    return {\n      lat: data[0].lat,\n      lon: data[0].lon,\n      name: `${data[0].name}${data[0].state ? ', ' + data[0].state : ''}`,\n    };\n  };\n\n\n  // 날씨 정보 요청\n  const fetchWeather = async (coords) => {\n    const resToday = await fetch(\n      `https://api.openweathermap.org/data/2.5/weather?lat=${coords.lat}&lon=${coords.lon}&appid=${API_KEY_1}&units=metric&lang=kr`\n    );\n    \n    const dataToday = await resToday.json();\n    setToday(dataToday);\n\n    const resHourly = await fetch(\n      `https://api.openweathermap.org/data/2.5/forecast?lat=${coords.lat}&lon=${coords.lon}&appid=${API_KEY_1}&units=metric&lang=kr`\n    );\n\n    const dataHourly = await resHourly.json();\n    setHourly(dataHourly.list.slice(0,6));\n  };\n\n\n  // 검색어가 변경될 때마다 날씨 갱신\n  useEffect(() => {\n    const loadWeather = async () => {\n      if (!searchQuery) return;\n      const coords = await getCoordinates(searchQuery);\n      if (coords) {\n        setLocationName(searchQuery);\n        fetchWeather(coords);\n      }\n    };\n    loadWeather();\n  }, [searchQuery]);\n    \n  return (\n    <div className={`weather-placeBar ${darkMode ? 'dark' : 'light'}`}>\n      <div className='weather-card'>\n      <h3>🌤 {locationName}</h3>\n\n      <div className='today-section'>\n        <h4>오늘의 날씨</h4>\n         \n           {today ? (\n            <div className='today-content'>\n              <img\n                src={`https://openweathermap.org/img/wn/${today.weather[0].icon}@2x.png`}\n                alt=\"weather-icon\"\n              />\n              <div>\n              <p className='temp'>{today.main.temp.toFixed(1)}℃</p>\n              <p>{today.weather[0].description}</p>\n              </div>\n              </div>\n           ) : (\n            <p>로딩 중...</p>\n           )}\n        </div>\n        \n\n        <div className='hourly-section'>\n          <h4>시간대별 날씨</h4>\n          <div className='hourly-scroll'>  \n            {hourly.map((item, index) => (\n              <div className='hourly-card' key={index}>\n                <p>{item.dt_txt.split(' ')[1].slice(0, 5)}</p>\n                <img\n                  src={`https://openweathermap.org/img/wn/${item.weather[0].icon}.png`}\n                  alt=\"icon\"\n                />\n                <p>{item.main.temp.toFixed(1)}℃</p>\n                </div>\n            ))}      \n          </div>\n        </div>            \n      </div>\n      </div>\n  );\n}\n\n\n\nexport default WeatherBar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}